# OVH DynDNS
#
# Homepage: https://github.com/4ndyZ/OVH-DynDNS
# Maintainer: AndyZ <info@andycraftz.eu>
#
# OVH
#
# Settings for using the OVH API. To generate the required application key, application secret and consumer key visit https://docs.ovh.com/gb/en/api/first-steps-with-ovh-api/#create-your-app-keys
#
# ovh:
#   region: ovh-eu/ovh-us/ovh-ca - OVH API region setting
#   applicationKey: "#your-ak" - OVH API application key
#   applicationSecretKey: "#your-ask" - OVH API application secret key
#   consumerKey: "#your-cs" - OVH API consumer key
ovh:
  region: ovh-eu
  applicationKey: ""
  applicationSecretKey: ""
  consumerKey: ""

# DynDNS
#
# Settings for the DynDNS client
#
# dyndns:
#   domain: "subdomain.example.com" - DynDNS domain
#   mode: dual/ipv4/ipv6 (default: ipv4) - Change what DNS records should be created. Mode "dual" will create A (IPv4) and AAAA (IPv6) records.
#   check: dns/api (default: api) - Change the way how to check if the current DNS records needs a refresh
dyndns:
  domain: "subdomain.example.com"
  mode: ipv4
  check: api

# Time interval
#
# Time interval setting to refresh
#
# timeinterval-to-pull: 120 (default: 120) - Time interval of the refresh in seconds
timeinterval-to-pull: 120

# Mode
#
# Change the mode of the microservice
#
# single-run: false/true (default: false) - Change the mode the service should run. If you enable this option the microservice will perform te data pull and insert and then stop. Option "time-interval-to-pull" will be ignored.
single-run: false

# Network interface
#
# Network interface setting to use
#
# network-interface: "eth0" (default: "") - Network interface to use. If empty the auto selected network interface will be used.
network-interface: ""

# Logging
#
# Logging settings of the microservice
#
# logging:
#   debug: false/true (default: false) - Run the microservice in debugging mode
#
logging:
  debug: false
